language: cpp
compiler:
  - clang
  - gcc
os:
  - linux
  - osx
before_install:
  # the coverage tool can't parse clang's output, so only run it on gcc
  - if [ $CC == gcc ]; then GEN_COVERAGE=1; fi
  # install mono, lcov and py3 using homebrew if on osx
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update; brew install mono lcov; brew upgrade python; fi
  - if [ $GEN_COVERAGE ]; then pip install --user cpp-coveralls; CMAKE_EXTRA_OPTS="-DASAR_COVERAGE=ON"; fi
install: # misc setup that I didn't want to put in script
  - mkdir build tests_dll_tmp tests_app_tmp
  - cd build
script:
  - cmake -DCMAKE_BUILD_TYPE=Debug $CMAKE_EXTRA_OPTS ../src
  - make
  # run dll test suite
  # We need to pass the DLL path as an absolute path because it is used to calculate the std defines location, which will throw a warning when it's a relative path
  - asar-tests/asar-dll-test $TRAVIS_BUILD_DIR/build/asar/libasar.* $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_dll_tmp
  # run app test suite
  - asar-tests/asar-app-test asar/asar-standalone $TRAVIS_BUILD_DIR/tests ../dummy_rom.sfc $TRAVIS_BUILD_DIR/tests_app_tmp
  # run C# wrapper tests
  - cp asar/libasar.* asar-tests/
  - mono asar-tests/asar-csharp-test
  # run python tests
  - cp ../src/asar-dll-bindings/python/asar.py asar/libasar.* ../src/asar-tests/
  - python3 ../src/asar-tests/test.py
after_success:
  - cd ..
  - if [ $GEN_COVERAGE ]; then lcov -c -d build -o coverage.info; coveralls --verbose --include src/asar --lcov-file coverage.info; fi
addons:
  apt:
    packages:
      - lcov
      # I guess I'll put this here for now
      # I'm 100% sure that we don't need everything from mono-complete
      # but until I figure out which parts we need this is staying
      - mono-complete
